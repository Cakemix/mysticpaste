<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-2.5.xsd           
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util-2.0.xsd"
       default-autowire="byName">


    <!--  tell spring to use annotation based congfigurations -->
    <context:annotation-config/>

    <context:component-scan base-package="com.mysticcoders.mysticpaste.persistence">
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Repository"/>
    </context:component-scan>

    <context:component-scan base-package="com.mysticcoders.mysticpaste.services">
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Service"/>
    </context:component-scan>

    <!-- Configurer that replaces ${...} placeholders with values from properties files -->
    <!-- (in this case, JDBC related properties) -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:application.properties</value>
                <!--
                <value>classpath:application-override.properties</value>
                <value>/etc/mysticpaste/application.properties</value>
-->
            </list>
        </property>
        <property name="ignoreResourceNotFound" value="true"/>
    </bean>

    <!-- Services Beans -->
    <bean id="pasteService" class="com.mysticcoders.mysticpaste.services.PasteServiceImpl">
        <property name="itemDao" ref="pasteItemDao"/>
        <property name="tokenLength" value="${private.token.length}"/>
        <property name="twitterUsername" value="${twitter.username}"/>
        <property name="twitterPassword" value="${twitter.password}"/>
        <property name="twitterEnabled" value="${twitter.enabled}"/>
    </bean>

    <!-- DAOs -->
    <bean id="pasteItemDao" class="com.mysticcoders.mysticpaste.persistence.gae.PasteItemDaoImpl">
        <property name="entityManager" ref="entityManager" />
    </bean>

    <bean id="pasteCommentDao" class="com.mysticcoders.mysticpaste.persistence.gae.PasteCommentDaoImpl" />

    <!-- Tell Spring it should use @Transactional annotations -->
    <!--
    <tx:annotation-driven/>
-->

    <bean id="datastoreService" class="com.google.appengine.api.datastore.DatastoreServiceFactory" factory-method="getDatastoreService" />

    <bean id="persistenceMetadataRepository" class="org.simpleds.metadata.SpringPersistenceMetadataRepositoryFactory">
        <property name="locations" value="classpath:com/mysticcoders/mysticpaste/model/gae/**" />
    </bean>

    <bean id="entityManager" class="org.simpleds.SpringEntityManagerFactory" />

    <!-- Only required if using @Transactional-->
<!--
    <bean class="org.simpleds.tx.TransactionInterceptor"/>
    <aop:aspectj-autoproxy/>
-->

</beans>